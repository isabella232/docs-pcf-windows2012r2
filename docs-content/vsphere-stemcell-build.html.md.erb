---
title: Creating a vSphere Stemcell Manually
owner: Greenhouse
---

<strong><%= modified_date %></strong>

This topic describes how to create a vSphere stemcell for Windows Server 2012R2 manually.

In vSphere, customers must build their own stemcells to use PCF Runtime for Windows in their on-premise deployments. 

## <a id='overview'></a>Overview

To build a vSphere stemcell, you start with an ISO of Windows Server 2012R2. Then you install the BOSH dependencies to create a `.tgz` file that can be uploaded to your BOSH Director and used with Cloud Foundry.

## <a id='considerations'></a>Considerations

The operator should maintain an updated template with all Windows recommended security updates. You can determine if your image needs updates by creating a VM with the image and navigating to **Control Panel**. If any critical or important updates are available, Pivotal recommends installing the updates first, then rebuilding the stemcell.

The instructions in this topic describe installing Windows from a Windows installation disk ISO, either a volume licensed copy or a retail copy from MSDN. Pivotal recommends maintaining a separate, updated Windows VM based on this ISO to serve as the basis for the installation steps below. This enables you to apply Windows Updates and create new stemcells without having to reinstall all updates from scratch. Ensure that your image has **Hardware Compatibility** set to **version 9**, and that it has VMware Tools installed.

On Patch Tuesday, run Windows Updates on the base image, then repeat the procedures in this topic starting at [Step 3: Install BOSH PSModules](#Step-3).

## <a id="pre-reqs"></a>Prerequisites 

<table>
<tr>
  <th>Component</th>
  <th>Notes</th>
</tr>
<tr>
  <td><a href="https://www.vmware.com/support/developer/ovf">ovftool</a></td>
  <td>Ensure the <code>ovftool</code> command is available from your command line. This tool is installed by default in <code>C:\Program Files\VMware\VMware OVF Tool</code>.</td>
</tr>
<tr>
  <td><a href="https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-2012-r2">Windows Server 2012 R2 ISO</a></td>
  <td>You can also use a custom base image.</td>
</tr>
<tr>
<td>VMware Fusion, VMware Workstation Pro v12+, or access to a vSphere account</td>
<td></td>
</tr>
</table>

## <a id="Step-1"></a> Step 1: Create Base VM for Stemcell

You can create the base VM from [VMware Fusion](#Fusion), [VMware Workstation](#Workstation), or a [vSphere account](#vSphere).

###<a id="Fusion"></a>VMware Fusion
1. Select **File** and then **New**.
1. Select **Installation Method: Create a custom virtual machine**.
1. Choose **Operating System**: **Microsoft Windows**, and then **Windows Server 2012**. 
1. Choose **Virtual Disk: Create a new virtual disk**. Use the default settings. 
1. Select **Customize Settings**. Save the VM before continuing. Use a name of your choosing. 
1. A **Settings** window will appear for your new VM. In the settings window, enter the following configurations:
	1. In the **Removable Devices** row, select **CD/DVD**, then click the **Connect CD/DVD Drive** checkbox.
	1. From **This drive is configured to use the following:**, select **Choose a disc or disc image** and specify your base Windows ISO.
	1. Click the **Hard Disk** settings.
	1. Click **Advanced Options** and deselect the **Split into multiple files** checkbox.
	1. Click **Apply Changes**.
1. Start the VM. If you are starting from a new MSDN ISO, proceed through the Windows installation process with your ISO. Pivotal recommends that you select **Windows Server 2012R2 Standard with a GUI** when proceeding with installation.
1. Install VMware Tools by performing the following steps:
	1. Click **Virtual Machine**. 
	1. Click  **Install VMWare Tools**.
	1. Click **Complete Installation** and follow the installation instructions. 
	1. Restart the VM to finish the install.

###<a id="Workstation"></a> For VMware Workstation
1. Ensure VMware Workstation Pro v12+ is installed.
1. Create a new VM by performing the following steps:
	1. Select **Custom Advanced**, then click **Next**.
	1. Select **Workstation 9.x Compatibility**, then click **Next**.
	1. Select **I will install operating system later**, then click **Next**.
	1. Select **Microsoft Windows**, then the **Windows 2012** version. Click **Next**.
	1. Choose a name for your virtual machine, then click **Next**.
	1. Select **BIOS**, then click **Next**.
	1. Adjust the number of cores and processors as needed, then click **Next**.
	1. Adjust the settings for memory as needed, then click **Next**.
	1. Select the correct **Network Type (NAT)**, then click **Next**.
	1. Select the **LSI Logic SAS** controller type, then click **Next**.
	1. Select the **SCSI** disk type, then click **Next**.
	1. Create a new virtual disk, then click **Next**.
	1. Adjust the maximum disk size as needed and select **Store virtual disk as a single file**, then click **Next**.
	1. Select **Customize Hardware**.
	1. Select **New CD/DVD**.
	1. Select **Use ISO Image file** and browse for your Windows ISO.
1. Power on the new VM. 
1. Install Windows by performing the following steps:
	1. Select **Server with GUI**.
	1. Select **Custom Installation**.
	1. Continue the installation and select a password for the Admin user.
1. After the VM starts successfully, right-click the machine name in Workstation and select **Install VMware Tools**. Restart the VM to finish the install.

###<a id="vCenter"></a>For vCenter
1. Upload your Windows ISO to your datastore by performing the following steps:
	1. Select **Storage** from the main vCenter menu.
	1. Select your desired datastore and directory.
	1. Select **Upload a file to datastore** and upload the ISO. This is the hard disk icon with a green plus sign.
	
	<p class="note"><strong>Note</strong>: To upload the ISO through your browser, you will be prompted to install a web plugin. You can also <code>scp</code>the file directly to the datastore server.</p>

1. Create a new virtual machine by performing the following steps:
	1. If you use an existing template, select the creation type **Deploy from template**. Select the existing template, then click **Next**.
	1. In **Select compatibility**, select **ESXi 5.5 and later**. Click **Next**.
	1. Select **Windows** as **Guest OS Family** and **Microsoft Windows Server 2012** as **Guest OS version**. Click **Next**. 
1. Under **New CD\DVD Drive** in **Customize Hardware**, perform the following steps:
	1. Select **Datastore ISO File**. 
	1. Expand the menu and select **Connect At Power On**.
	1. Click **Browse** and select the ISO you uploaded to your datastore.
	1. Select **IDE** as the Virtual Device Node.
1. After creating the VM, click **Power On** in the **Actions** tab for your VM, then install Windows by performing the following steps:
	1. Select **Server with GUI**.
	1. Select **Custom Installation**.
	1. Complete the installation process and add **Select a password for Administrator user**.
1. In the vCenter web client, click **Install VMware Tools** in the **VM Summary** tab. Restart the VM to finish the install.

##<a id="Step-2"></a> Step 2: Download BOSH PSModules

Download the **bosh-psmodules.zip** file for your desired release from the `bosh-windows-stemcell-builder` GitHub <a href="https://github.com/cloudfoundry-incubator/bosh-windows-stemcell-builder/releases">repo</a>. 
<p class="note warning"><strong>Warning</strong>: 
Pivotal does not recommend building the BOSH PSModules from the source. However, if you must do so, follow the steps below.
</p>
To build the BOSH PSModules from source, perform the following steps:

1. Clone the `bosh-windows-stemcell-builder` GitHub <a href="https://github.com/cloudfoundry-incubator/bosh-windows-stemcell-builder">repo</a> on your host, not in the VM for your stemcell: 
	<pre class="terminal">
	$ git clone <span>https:</span>//github.com/cloudfoundry-incubator/bosh-windows-stemcell-builder
	</pre>
1. Expand the submodules and build the BOSH PSModules:
	<pre class="terminal">
	$ cd bosh-windows-stemcell-builder
	$ git checkout DESIRED\_STEMCELL\_VERSION_TAG
	$ git submodule update --init --recursive
	$ gem install bundler
	$ bundle install
	$ rake package:psmodules
	</pre>
	Keep in the mind the following when completing this procedure:
	* Do not use the GitHub generated "Source Code" <code>.zip</code> and "Source Code" <code>.tar.gz</code> files from the releases page. These are not Git repositories and are missing submodules.
	* On Windows, you must clone directly into <code>C:\\</code>, or the <code>git clone</code> and <code>submodule update</code> commands will fail due to file path lengths.

## <a id="Step-3"></a> Step 3: Install BOSH PSModules

1. Transfer the `bosh-psmodules.zip` file you either downloaded from the releases page of the `bosh-windows-stemcell-builder` GitHub repo or the `build/bosh-psmodules.zip` file you built from the source, to your Windows VM. If you are running VMware Workstation or Fusion, and have installed VMware Tools, you can drag and drop the file.
1. Unzip the `.zip` file and copy the `BOSH.*` folders to `C:\Program Files\WindowsPowerShell\Modules`.

##<a id="Step-4"></a> Step 4: Install Cloud Foundry Cell Requirements

1. On your Windows VM, start `powershell` and run `Install-CFFeatures`. Depending on your Windows ISO, you may need to run `powershell -ExecutionPolicy Bypass -Command Install-CFFeatures` for this and all subsequent commands from BOSH PSModules.
1. If you want to apply the recommended ingress and service configuration, run `Protect-CFCell` from PowerShell.
1. To ensure you have the proper .NET Framework version(s) installed, follow this <a href="https://github.com/cloudfoundry-incubator/bosh-windows-stemcell-builder/wiki/Manual-Stemcell-DotNet-Version-Guide">guide</a>.

##<a id="Step-5"></a> Step 5: Download and Install the BOSH Agent

1. Download the `agent.zip` file for your desired release from the `bosh-windows-stemcell-builder` GitHub <a href="https://github.com/cloudfoundry-incubator/bosh-windows-stemcell-builder/releases">repo</a>. 
1. Transfer the `agent.zip` file to your Windows VM.
1. On your Windows VM, start `powershell` and run the following command:
<pre class="terminal">
PS> Install-Agent -IaaS vsphere -agentZipPath PATH_TO_AGENT.ZIP
</pre>
<p class="note warning"><strong>Warning</strong>: 
Pivotal does not recommend building the BOSH Agent from the source. However, if you must do so, follow the steps below.
</p>

To build the BOSH Agent from the source, perform the following steps:

1. Ensure you have the latest versions of [Golang](https://golang.org/dl/) 1.8.x and [Ruby](https://www.ruby-lang.org/en/downloads/) 2.3.x installed. 
1. Run <code>rake package:agent</code> on your host. Do not run the <code>rake package:agent</code> command in the VM for your stemcell.
1. Transfer the `build/agent.zip` file you built from the source to your Windows VM.
1. On your Windows VM, start `powershell` and run `Install-Agent -IaaS vsphere -agentZipPath PATH_TO_AGENT.zip`.

##<a id="Step-6"></a> Step 6: Optimize and Compress Disk

Windows 2012R2 stemcells can be large, and sometimes exceed the 10GB upload limit encoded into the BOSH Director. In order to reduce the stemcell size so you don't have to change this limit, run the following PowerShell modules:

* `Optimize-Disk`: This command is a wrapper that runs `dism` and clears unnecessary files.
* `Compress-Disk`: This command can be used to defrag and zero out the disk.

##<a id="Step-7"></a> Step 7: Sysprep and Apply Security Policies

Sysprepping and applying the recommended local security policy ensures uptime as well as the secure operations of the stemcell VMs, especially when deployed with Cloud Foundry. 

Keep in mind that this procedure disables Windows Automatic Updates, which tends to restart the OS. When this occurs, BOSH will attempt to recreate the VM.

Perform the following steps:

1. [Download](https://msdnshared.blob.core.windows.net/media/2016/09/LGPOv2-PRE-RELEASE.zip) `lgpo.exe` to the Windows VM you are provisioning.
1. Save `lgpo.exe` to `C:\Windows\lgpo.exe`.
1. Run the following PowerShell command to sysprep and apply the recommended local security policy, replacing the placeholder values with your own information:
<pre class="terminal">
PS> Invoke-Sysprep -IaaS vsphere -NewPassword NEW_PASSWORD -ProductKey PRODUCT_KEY -Owner OWNER -Organization ORGANIZATION
</pre>
Keep in mind the following:
	* If you are using a volume-licensed copy of Windows, leave `PRODUCT_KEY` blank.
	* Do not use any special character in the password other than `!`. For example, `Example12!` is acceptable, but not `Example#12`. 
	* If you are invoking the sysprep command with `powershell -ExecutionPolicy Bypass -Command Invoke-Sysprep...`, wrap the entire sysprep invocation in double quotes: 
	<pre class="terminal">
	powershell -ExecutionPolicy Bypass -Command "Invoke-Sysprep -IaaS vsphere -NewPassword NEW_PASSWORD -Owner OWNER -Organization ORGANIZATION"
	</pre>
1. Running the above command will power off the VM. Do not turn the VM back on before exporting.

For release versions 1079 and later of the [BOSH Agent](#Step-5), you can sysprep the image without applying the recommended local security policy. Pivotal does not recommend this for production environments, but you may want it for development or testing environments that don't require a high level of security, or if you are using your own local security policy.

To skip the application of the security policy, use the `-SkipLGPO` flag:

While it is not recommended, it is possible to sysprep the image without applying these policies. You may do this in development setups or testing scenarios that don't require such security, or if you are using your own local policies. To do this, use the -SkipLGPO flag in PowerShell:

<pre class="terminal">
PS> Invoke-Sysprep -IaaS vsphere -NewPassword NEW_PASSWORD -ProductKey PRODUCT_KEY -Owner OWNER -Organization ORGANIZATION -SkipLGPO
</pre>

This will power off the VM. Do not turn the VM back on before exporting.

##<a id="Step-8"></a> Step 8: Convert VMDK File to BOSH Stemcell

Follow the instructions for [VMware Fusion or VMware Workstation](#vmdk-vmware) or [vSphere](#vmdk-vsphere).

###<a id="vmdk-vmware"></a>VMware Fusion or Workstation

Perform the following steps to convert the VMDK file to a BOSH stemcell in VMware Fusion or Workstation:

1. Locate the `.vmdk` file associated with the VM you powered off in the previous section. The default directory for VM disk images is in `Documents` in your home directory, such as `~/Documents/Virtual Machines/vm-name.vmwarevm/Virtual Disk.vmdk` on Linux or `C:\Users\Administrator\Documents\Virtual Machines\vm-name.vmwarevm\Virtual Disk.vmdk` on Windows.
1. [Download](https://github.com/pivotal-cf-experimental/stembuild/releases) the latest release of the `stembuild` utility, and choose a version for the stemcell.
1. Use the `stembuild` utility to create a stemcell:
	<pre class="terminal">$ stembuild -vmdk "~/Documents/My VMs/stemcell-base/Virtual Disk.vmdk" -version 1200.3</pre>
	The utility will create the stemcell in your current directory by default. The process may take ten to twenty minutes to complete.

###<a id="vmdk-vsphere"></a>vSphere

Perform the following steps to convert the VMDK file to a BOSH stemcell in vSphere:

1. If you are using vCenter, right-click the VM and click **Template > Export to OVF Template**. If you are using the standalone vSphere client, click **File > Export > Export OVF Template**. 
1. Download the OVA file locally. You do not need to include files in the floppy or CD drive. 
1. Rename the OVA file to have a `.tar` extension.
1. Decompress the `.tar` archive to find the VMDK file.
1. [Download](https://github.com/pivotal-cf-experimental/stembuild/releases) the latest release of the `stembuild` utility, and choose a version for the stemcell.
1. Use the `stembuild` utility to create a stemcell:
	<pre class="terminal">$ stembuild -vmdk "~/Documents/My VMs/stemcell-base/Virtual Disk.vmdk" -version 1200.3</pre>
	The utility will create the stemcell in your current directory by default. The process may take ten to twenty minutes to complete.

##<a id="Step-9"></a> Step 9: Test Stemcell 

Using the `bosh-windows-acceptance-tests` helps you confirm that your stemcell is working as expected. 

Perform the following steps to test the stemcell: 

1. Ensure you have the latest stable version of the BOSH CLI v2 installed. For more information, see the [BOSH documentation](https://bosh.io/docs/cli-v2.html).
1. Ensure that you have the [latest version](https://golang.org/dl/) of Golang 1.8.x installed.
1. Set the environment variables in the following table. On Linux, set the variables by including `export ENVIRONMENT_VARIABLE=VARIABLE_PATH_OR_VALUE` in your Bash profile. On Windows, set the variables within the **Advanced** section of **My Computer**.

	<table>
	<tr>
	  <th>Variable</th>
	  <th>Notes</th>
	</tr>
	<tr>
	  <td>BOSH_TARGET</td>
	  <td>This is the IP of your BOSH director.</td>
	</tr>
	<tr>
	<td>BOSH_CLIENT</td>
	<td>This is the BOSH client name.</td>
	</tr>
	<tr>
	<td>BOSH_CLIENT_SECRET</td>
	<td>This is your BOSH client secret.</td>
	</tr>
	<tr>
	<td>BOSH_CA_CERT</td>
	<td>This is the content of your BOSH Director cert, including `\n` for new lines.</td>
	</tr>
	<tr>
	<td>BOSH_UUID</td>
	<td>This is the unique identifier for your BOSH deployment.</td>
	</tr>
	<tr>
	<td>STEMCELL_PATH</td>
	<td>This is the path to the stemcell tarball.</td>
	</tr>
	<tr>
	<td>AZ</td>
	<td>This is the AZ from the BOSH cloud config. For more information about the cloud config values, see the <a href="https://bosh.io/docs/cloud-config.html">BOSH documentation</a>.</td>
	</tr>
	<tr>
	<td>VM_TYPE</td>
	<td>This is the VM type from the BOSH cloud config.</td>
	</tr>
	<tr>
	<td>VM_EXTENSIONS</td>
	<td>This is a comma-separated string of VM extensions from the BOSH cloud config.</td>
	</tr>
	<tr>
	<td>NETWORK</td>
	<td>This is the network from the BOSH cloud config.</td>
	</tr>
	</table>
</br>

1. Run the `bosh-windows-acceptance-tests` with the following `rake` commands:
	<pre class="terminal">$ rake package: bwats
	$ rake run:bwats ["vsphere"]</pre>

##<a id="known-issues"></a> Known Issues
This section lists known issues for creating a vSphere stemcell manually.

###<a id="special"></a> Special Characters
There is a known issue with using special characters in the password you create while completing the [Step 7: Sysprep and Apply Security Policies](#Step-7) section. Pivotal recommends using the exclamation point as a special character until this issue is completely resolved.