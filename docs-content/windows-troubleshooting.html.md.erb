---
title: Troubleshooting Windows Cells 
owner: Greenhouse
---

<strong><%= modified_date %></strong>

This topic describes how to troubleshoot Windows cells deployed by Pivotal Cloud Foundry (PCF) Runtime for Windows.

##<a id='logs'></a> Retrieve Logs

Perform the following steps to retrieve the logs for the Windows cell:

1. Navigate to the Ops Manager Installation Dashboard.
1. Click the **PCF Runtime for Windows** tile.
1. Click the **Status** tab.
1. Under the **Logs** column, click the download icon for the Windows cell you want to retrieve logs from.
1. Click the **Logs** tab.
1. When the logs are ready, click the filename to download them.
1. Unzip the file to examine the contents. Each component on the cell has its own logs directory:
	* `/consul_agent_windows/`
	* `/garden-windows/`
	* `/metron_agent_windows/`
	* `/rep_windows/`

##<a id='rdp'></a> Connect to the Windows Cell

Perform the following steps to connect to your Windows cell to run diagnostics:

1. Download and install a Remote Desktop Protocol (RDP) client.
	* For Mac OS X, download the Microsoft Remote Desktop app from the [Mac App Store](https://itunes.apple.com/us/app/microsoft-remote-desktop/id715768417?mt=12).
	* For Windows, download the Microsoft Remote Desktop app from [Microsoft](https://www.microsoft.com/en-us/store/p/microsoft-remote-desktop/9wzdncrfj3ps).
	* For Linux/UNIX, download a RDP client like [rdesktop](http://www.rdesktop.org/).

1. Follow the steps in the [Log into BOSH](../customizing/trouble-advanced.html#log-in) section of the <em>Advanced Troubleshooting with the BOSH CLI</em> topic to target and log in to your BOSH Director. The steps vary slightly depending on whether your PCF deployment uses internal authentication or an external user store.

1. Retrieve the IP address of your Windows cell using one of the following methods.
  * If you use [BOSH CLI v1](https://bosh.io/docs/bosh-cli.html), run the following command:
        <pre class="terminal">
        $ bosh vms garden-windows
        Acting as user 'director' on deployment 'garden-windows' on 'p-bosh-1170e9b438cb29ff7c63'
        Director task 274
        Task 274 done
        +-------------------------------------------------------+---------+---------+---------+--------------+
        | VM                                                    | State   | AZ      | VM Type | IPs          |
        +-------------------------------------------------------+---------+---------+---------+--------------+
        | cell_windows/0 (03e221b3-3222-5e1e-eedd-b92221ff88e1) | running | default | xlarge  | <%= vars.example_ip_2 %> |
        +-------------------------------------------------------+---------+---------+---------+--------------+

        VMs total: 1
        </pre>
  * If you use [BOSH CLI v2](https://bosh.io/docs/cli-v2.html), run the following command, replacing `MY-ENV` with the alias you assigned to your BOSH Director:
        <pre class="terminal">
        $ bosh -e MY-ENV -d garden-windows
        Using environment 'DIRECTOR-IP' as client 'admin'

        Name               Release(s)       Stemcell(s)    Team(s)  Cloud Config
        garden-windows     ...              ...            -        latest
        </pre>

1. Retrieve the Administrator password for your Windows cell by following the steps for your IaaS:
	* On vSphere, this is the value of `WINDOWS_PASSWORD` in the `consumer-vars.yml` file you used to previously build a stemcell.
	* On Amazon Web Services (AWS), navigate to the AWS EC2 console. Right-click on your Windows cell and select **Get Windows Password** from the drop-down menu. Provide the local path to the `ops_mgr.pem` private key file you used when installing Ops Manager and click **Decrypt password** to obtain the Administrator password for your Windows cell.
	* On Google Cloud Platform (GCP), navigate to the Compute Engine Dashboard. Under **VM Instances**, select the instance of the Windows VM. At the top of the page, click on **Create or reset Windows password**. When prompted, enter "Administrator" under **Username** and click **Set**. You will receive a one-time password for the Windows cell.
	* You cannot RDP into Windows cells on Azure.

1. Open your RDP client. The examples below use the Microsoft Remote Desktop app.

1. Click **New** and enter your connection information:
	<%= image_tag('rdp-connect.png') %>
	* **Connection name**: Enter a name for this connection.
	* **PC name**: Enter the IP address of your Windows cell.
	* **User name**: Enter `Administrator`.
	* **Password**: Enter the password of your Windows cell that you obtained above.

1. To mount a directory on your local machine as a drive in the Windows cell, perform the following steps:
	1. From the same **Edit Remote Desktops** window as above, click **Redirection**.
	1. Click the plus icon at the bottom left. 
	<%= image_tag('rdp-redirection.png') %>
	1. For **Name**, enter the name of the drive as it will appear in the Windows cell. For **Path**, enter the path of the local directory. 
	1. Click **OK**.

1. Close the **Edit Remote Desktops** window and double-click the newly added connection under **My Desktops** to open a RDP connection to the Windows cell.

1. In the RDP session, you can use the [Consul CLI](#consul) to diagnose problems with your Windows cell.

###<a id='consul'></a> Consul CLI

Perform the following steps to use the Consul CLI on your Windows cell to diagnose problems with your Consul cluster:

1. In your RDP session, open a PowerShell window.
1. Change into the directory that contains the Consul CLI binary:
	<pre class="terminal">
	PS C:\Users\Administrator> cd C:\var\vcap\packages\consul-windows\bin\ 
	</pre>
1. Use the Consul CLI to list the members of your Consul cluster:
	<pre class="terminal">
	PS C:\Users\Administrator\var\vcap\packages\consul-windows\bin\> .\consul.exe members
	Node                       Address          Status  Type    Build  Protocol  DC
	cell-windows-0             10.0.0.111:8301  alive   client  0.6.4  2         dc1
	cloud-controller-0         10.0.0.94:8301   alive   client  0.6.4  2         dc1
	cloud-controller-worker-0  10.0.0.99:8301   alive   client  0.6.4  2         dc1
	consul-server-0            10.0.0.96:8301   alive   server  0.6.4  2         dc1
	diego-brain-0              10.0.0.109:8301  alive   client  0.6.4  2         dc1
	diego-cell-0               10.0.0.103:8301  alive   client  0.6.4  2         dc1
	diego-cell-1               10.0.0.104:8301  alive   client  0.6.4  2         dc1
	diego-cell-2               10.0.0.107:8301  alive   client  0.6.4  2         dc1
	diego-database-0           10.0.0.92:8301   alive   client  0.6.4  2         dc1
	ha-proxy-0                 10.0.0.254:8301  alive   client  0.6.4  2         dc1
	nfs-server-0               10.0.0.100:8301  alive   client  0.6.4  2         dc1
	router-0                   10.0.0.105:8301  alive   client  0.6.4  2         dc1
	uaa-0                      10.0.0.93:8301   alive   client  0.6.4  2         dc1
	</pre>
1. Examine the output to ensure that the `cell-windows-0` service is registered in the Consul cluster and is `alive`. Otherwise, your Windows cell cannot communicate with your PCF deployment and developers cannot push .NET apps to the Windows cell. Check the configuration of your Consul cluster, and ensure that your certificates are not missing or misconfigured.
