---
title: Deploying PCF Runtime for Windows 
owner: Greenhouse
---

<strong><%= modified_date %></strong>

This topic describes how to install and configure the Pivotal Cloud Foundry (PCF) Runtime for Windows v1.11 tile. The PCF Runtime for Windows tile installs Windows cells on your PCF deployment.

## <a id='reqs'></a> Requirements

To install the PCF Runtime for Windows v1.11 tile, you must have Ops Manager v1.11.0 or later and Elastic Runtime v1.11.0 or later deployed to vSphere, Amazon Web Services (AWS), Google Cloud Platform (GCP), or Azure.

## <a id='ert'></a> Step 1: Confirm Elastic Runtime Settings

There are two settings in the Elastic Runtime tile that affect the Windows cells installed by the PCF Runtime for Windows tile. Configure these settings as desired:

* In the **Networking** section, if you select the **Disable SSL certificate verification for this environment** checkbox, SSL certificate verification is disabled for Windows cells.
* In the **System Logging** section, if you configure an external syslog aggregator, logs are drained from Windows cells as well as non-Windows cells.

##<a id='install'></a> Step 2: Install the Tile

1. Download the product file from the **Pivotal Cloud Foundry Runtime for Windows** section of [Pivotal Network](https://network.pivotal.io/products/runtime-for-windows).

1. Navigate to the Ops Manager Installation Dashboard and click **Import a Product** to upload the product file. 

1. Click **+** under the uploaded **PCF Windows Runtime** tile to add it to your staging area.

##<a id='config'></a> Step 3: Configure and Deploy the Tile

1. Click the newly added **PCF Runtime for Windows** tile.

    <%= image_tag('pcf-windows-tile-orange.png') %>

1. Click **Assign AZs and Networks** or **Assign Networks**. The name of the section varies depending on your IaaS.

1. Assign your AZs and networks and click **Save**.

1. (Optional) If you want your PCF Runtime for Windows application workloads to be deployed to an isolation segment, perform the following steps:

    1. Click **Application Containers**.

        <%= image_tag('app_containers_segment_name.png') %>
    1. Under **Segment Name**, enter a name for your isolation segment. Ensure that this name is unique across your PCF deployment.

    1. Click **Save**.
    
    1. Perform the steps in the [Create an Isolation Segment](../adminguide/isolation-segments.html#create-an-is) section of the <em>Managing Isolation Segments</em> topic to create the isolation segment in the Cloud Controller Database (CCDB).

1. (Optional) If an antivirus scanner runs on your VMs, configure the scanner to let the BOSH agent download and uncompress files. See [Configure Antivirus for Windows Cells](#antivirus) for details.

1. Click **Errands**. Pivotal recommends that you set the **Install HWC Buildpack Errand** to **On**. This ensures that you receive the most up-to-date HWC Buildpack.
	
    <%= image_tag('errands-hwc.png') %>

1. Click **Resource Config** and adjust the number and VM types of your Windows cells as needed.

1. Click **Save**.

1. Click **Stemcell**. Record the stemcell version number required by the tile. 

    <%= image_tag('pcf-windows-tile-stemcell.png') %>

1. Retrieve the stemcell by following the steps below for your IaaS.
    * For vSphere, you must create your own stemcell. See either [Creating a vSphere Stemcell Manually](vsphere-stemcell-build.html) or [Creating a vSphere Stemcell by Hand](https://github.com/cloudfoundry-incubator/bosh-windows-stemcell-builder/wiki/Creating-a-vSphere-Stemcell-by-Hand) for more information.
    * For AWS, GCP, and Azure, navigate to the **Stemcells for PCF (Windows Server)** section of [Pivotal Network](https://network.pivotal.io/products/stemcells-windows-server).

1. Click **Save**.

1. Return to the Ops Manager Installation Dashboard and click **Apply Changes** to install the PCF Runtime for Windows tile.

After you have deployed the PCF Runtime for Windows tile, developers can then push .NET applications to Windows cells. For more information, see the [Deploying .NET Apps to Windows Cells](push-windows-apps.html) topic.

##<a id='antivirus'></a> Configure Antivirus for Windows Cells

Diego cell VMs routinely download and uncompress files, while antivirus scanners scan files once they are downloaded or uncompressed. When an antivirus scanner program runs in a directory that BOSH is actively downloading or compressing into, scanner actions can block BOSH processes and cause hard-to-debug “Access is denied” errors.

To prevent these errors, configure your antivirus scanner to disable **on-access scanning** for the following directories on your Windows cell:

* `C:\bosh`
* `C:\var\vcap`
* `C:\containerizer`
